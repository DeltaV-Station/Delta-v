using Content.Client.UserInterface.Controls;
using Content.Shared.DeltaV.FeedbackOverwatch;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.DeltaV.FeedbackPopup;

[GenerateTypedNameReferences]
public sealed partial class FeedbackPopupWindow : FancyWindow
{
    [Dependency] private readonly IPrototypeManager _proto = default!;
    private readonly IUriOpener _uri;

    private readonly FeedbackPopupPrototype _feedbackpopup;
    public FeedbackPopupWindow(ProtoId<FeedbackPopupPrototype> popupProto)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        _uri = IoCManager.Resolve<IUriOpener>();

        _feedbackpopup = _proto.Index(popupProto);
        PopulateWindow();
    }

    private void PopulateWindow()
    {
        // Title
        TitleLabel.Text = _feedbackpopup.Title;

        // Description
        foreach (var section in _feedbackpopup.Description)
            CreateSection(section);

        // Feedback location
        if (_feedbackpopup.FeedbackLocation != null)
        {
            var label = new RichTextLabel
            {
                Text = _feedbackpopup.FeedbackLocation,
                Margin = new Thickness(0,0,0,10),
                HorizontalAlignment = HAlignment.Center,
            };

            FeedbackLocationContainer.AddChild(label);
        }

        // Discord link button
        if (_feedbackpopup.DiscordLink != null && _feedbackpopup.DiscordLink.StartsWith("https://discord.com/"))
        {
            var button = new Button
            {
                Text = Loc.GetString("feedbackpopup-discord-button-name"),
            };
            button.OnPressed += OnButtonPressed;
            FeedbackLocationContainer.AddChild(button);
        }
    }

    private void CreateSection(string text)
    {
        var label = new RichTextLabel
        {
            Text = text,
            Margin = new Thickness(0,0,0,10),
        };
        SectionContainer.AddChild(label);
    }

    private void OnButtonPressed(BaseButton.ButtonEventArgs args)
    {
        if (_feedbackpopup.DiscordLink != null)
            _uri.OpenUri(_feedbackpopup.DiscordLink);
    }
}

