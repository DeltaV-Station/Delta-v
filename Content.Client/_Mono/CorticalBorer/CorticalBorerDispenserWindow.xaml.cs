// SPDX-FileCopyrightText: 2025 Coenx-flex
//
// SPDX-License-Identifier: AGPL-3.0-or-later

using Content.Client.UserInterface.Controls;
using Content.Shared._Mono.CorticalBorer;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._Mono.CorticalBorer;

[GenerateTypedNameReferences]
public sealed partial class CorticalBorerDispenserWindow : FancyWindow
{

    public event Action<string>? OnDispenseReagentButtonPressed;

    public CorticalBorerDispenserWindow()
    {
        RobustXamlLoader.Load(this);
    }

    public void UpdateState(BoundUserInterfaceState state)
    {
        var castState = (CorticalBorerDispenserBoundUserInterfaceState)state;

        UpdateReagentsList(castState.DisList);

        AmountGrid.Selected = castState.SelectedDispenseAmount.ToString();
    }

    public void UpdateReagentsList(List<CorticalBorerDispenserItem> chemicals)
    {
        if (ReagentList == null)
            return;

        ReagentList.Children.Clear();

        chemicals.Sort((x, y) => x.ReagentName.CompareTo(y.ReagentName));

        foreach (var chem in chemicals)
        {
            var card = new CorticalBorerReagentCardControl(chem);
            card.OnPressed += OnDispenseReagentButtonPressed;
            ReagentList.Children.Add(card);
        }
    }


}

