using Content.Client.UserInterface.Controls;
using Content.Shared._Impstation.Chaplain;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._Impstation.Chaplain;

[GenerateTypedNameReferences]
public sealed partial class ChaplainGearMenu : FancyWindow
{
    [Dependency] private readonly IEntitySystemManager _sysMan = default!;
    private readonly SpriteSystem _spriteSystem;

    public event Action? OnApprove;
    public event Action<int>? OnSetChange;

    public ChaplainGearMenu()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        _spriteSystem = _sysMan.GetEntitySystem<SpriteSystem>();

        ApproveButton.OnPressed += args =>
        {
            OnApprove?.Invoke();
        };
    }

    public void UpdateState(ChaplainGearMenuBoundUserInterfaceState state)
    {
        SetsGrid.DisposeAllChildren();
        var selectedNumber = 0;
        foreach (var (set, info) in state.Sets)
        {
            var child = new ChaplainGearMenuSet(info, _spriteSystem);

            child.SetButton.OnButtonDown += (args) =>
            {
                OnSetChange?.Invoke(set);
            };

            SetsGrid.AddChild(child);

            if (info.Selected)
                selectedNumber++;
        }

        Description.Text = Loc.GetString("chaplain-gearmenu-window-description");
        SelectedSets.Text = Loc.GetString("chaplain-gearmenu-window-selected", ("selectedCount", selectedNumber), ("maxCount", state.MaxSelectedSets));
        ApproveButton.Disabled = selectedNumber != state.MaxSelectedSets;
    }
}
