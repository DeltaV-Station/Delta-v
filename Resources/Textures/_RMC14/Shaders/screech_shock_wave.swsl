uniform sampler2D SCREEN_TEXTURE;
uniform highp float waveStrength;
uniform highp vec2 position;
uniform highp float waveSpeed;
uniform highp float downScale;

void fragment()
{
    highp vec2 st = UV;
    highp vec2 WaveCentre = position;
    highp float ratio = SCREEN_PIXEL_SIZE.y / SCREEN_PIXEL_SIZE.x * 0.5;
    WaveCentre.y *= ratio;
    highp float dist = distance(vec2(st.x, st.y * ratio), WaveCentre) * downScale;
    highp float val = dist;
    highp float a = 3.0;
    highp float cosFuns = cos(val * 20.0 - TIME * waveSpeed);
    highp float powFuns = pow(val * 2.5, a);
    highp float limtedPowFuns = 0.5 * pow(a / (a + powFuns), 2.0);
    highp float finalRes = smoothstep(0.0, 1.0, limtedPowFuns * cosFuns) * waveStrength;
    highp vec3 col = finalRes * vec3(1.0);
    st = st * 2.0 - 1.0;
    st *= 1.0 + finalRes * 0.1;
    st = st * 0.5 + 0.5;
    highp vec4 texCol = zTextureSpec(SCREEN_TEXTURE, st);
    texCol += (texCol * finalRes) / (dist * 10.0);

    COLOR = texCol;
}
